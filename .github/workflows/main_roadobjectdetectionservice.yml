name: Deploy Python App to Azure Web App (Docker)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: roadobjectdetection # Replace with your App Service name
  AZURE_CONTAINER_REGISTRY: registryfastapi.azurecr.io # Replace with your ACR login server name (e.g., myappacr.azurecr.io)
  IMAGE_NAME: roadobjectdetection-image # Name for your Docker image
  PYTHON_VERSION: '3.13.3' # Match your Dockerfile base image

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production # Or your desired environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Use Azure Login action with Service Principal
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Explicitly log in to ACR using the Service Principal's credentials
    # This is crucial for docker buildx push to authenticate correctly
    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
        # Correctly parse the JSON secret to get clientId and clientSecret
        username: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
        password: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}

    # Build and push Docker image (authentication handled by docker/login-action)
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        # build-args: |
        #   TORCH_INDEX_URL=https://download.pytorch.org/whl/cpu

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'production' # Or your staging slot
        images: '${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
